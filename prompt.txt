Are you sure this works?

new URLSearchParams(formData);

Also set the accept header to plain text

Here are the changes I made too

import { JSX } from 'preact';
import { useSignal } from '@preact/signals';
import { delay } from '@std/async/delay';
export function Form(props: JSX.HTMLAttributes) {
const isLoading = useSignal(false);
const handleSubmit = async (e: JSX.TargetedEvent) => {
e.preventDefault();
if (isLoading.value) return;
const form = e.currentTarget;
isLoading.value = true;
await delay(1000);
const formData = new FormData(form);
const method = (form.method || 'get').toLowerCase();
let url = form.action || globalThis.location.href;
try {
let response;
if (method === 'get') {
const params = new URLSearchParams(formData);
url = `${url}${url.includes('?') ? '&' : '?'}${params}`;
response = await fetch(url, {
method: 'GET',
 });
 } else {
response = await fetch(url, {
method: method,
body: formData,
 });
 }
if (!response.ok) {
alert(`Error: ${response.status} ${response.statusText}`);
isLoading.value = false;
return;
 }
if (response.redirected) {
globalThis.location.href = response.url;
 } else if (method === 'get') {
globalThis.location.href = url;
 }
 } catch (err) {
alert(err instanceof Error ? err.message : 'An error occurred');
isLoading.value = false;
 }
 };
return 

;
}